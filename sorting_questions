https://leetcode.com/problems/find-target-indices-after-sorting-array/description/

class Solution {
    public List<Integer> targetIndices(int[] nums, int target) {
        Arrays.sort(nums);
        List<Integer> ans = new ArrayList<>();
        int low = 0;
        int high = nums.length - 1;
        while(low<=high){
            int mid = (low + (high - low)/2);
            if(nums[mid] == target){
                ans.add(mid);
            }

            if(nums[mid] < target){
                low = mid+1;
            }else{
                high = mid-1;
            }
        }
        Collections.sort(ans);
        return ans;
    }
}

https://leetcode.com/problems/intersection-of-two-arrays-ii/

class Solution {
    public int[] intersect(int[] nums1, int[] nums2) {
        int n = nums1.length;
        int m = nums2.length;
        ArrayList<Integer> list = new ArrayList<>();
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                 if(nums1[i] == nums2[j]){
                     list.add(nums1[i]);
                     nums2[j] = -1;
                 }
            }
        }
        int[] ans = new int[list.size()];
         for(int k=0;k<list.size();k++){
            ans[k] = list.get(k);
         }
        return ans;
    }
}

